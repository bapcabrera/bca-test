name: $(Date:yyyyMMdd).$(Rev:r)

trigger:
  branches:
    include:
    - test
  paths:
    exclude:
    #- azure-build.yml
    - azure-release.yml

variables:
- group: "Build"
- group: "Build - Chocolatey"
- group: "Build - Nuget"
- group: "GitHub - BapCabrera"
- name: 'pool.name'
  value: 'Azure Pipelines'
- name: 'pool.vmImage'
  value: 'vs2017-win2016'
- name: choco-pack
  value: 'false'
- name: choco-push
  value: 'false'
- name: nuget-pack
  value: 'false'
- name: nuget-push
  value: 'false'

jobs: 
- job: Build
  displayName: Build and Test
  pool:
    name: $(pool.name)
    vmImage: $(pool.vmImage)
  steps:
  - task: CopyFiles@2
    displayName: 'Copy Sources '
    inputs:
      SourceFolder: 'src/$(Build.DefinitionName)'
      Contents: |
        **
        !**\.gitignore
      TargetFolder: '$(BuildSourcesDirectory)'
      CleanTargetFolder: true
      OverWrite: true
  - powershell: |
      Write-Host '$(BuildArtifacts)'
    displayName: 'Test'
  - powershell: |
        #Find-Module -Name Bca.Nuget | Install-Module -Scope CurrentUser -Force
    displayName: 'Install Bca.Nuget'
  - task: PublishPipelineArtifact@1
    displayName: 'Publish Pipeline Artifact'
    inputs:
      targetPath: '$(BuildSourcesDirectory)'
      artifact: 'Sources'
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), ne(variables['Build.SourceBranchName'], 'develop'))

- job: NotMaster
  pool:
    name: $(pool.name)
    vmImage: $(pool.vmImage)
  dependsOn: Build
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranchName'], 'master'))
  steps:
  - powershell: |
      Write-Host 'Hi'
    displayName: 'Test'

- job: NotPR
  pool:
    name: $(pool.name)
    vmImage: $(pool.vmImage)
  dependsOn: Build
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  steps:
  - powershell: |
      Write-Host 'Hi'
    displayName: 'Test'

- job: All
  pool:
    name: $(pool.name)
    vmImage: $(pool.vmImage)
  dependsOn: Build
  steps:
  - powershell: |
      Write-Host 'Hi'
    displayName: 'Test'