variables:
- group: "YAML - Build"

parameters:
- name: 'name'
  type: string
  default: 'test'
- name: 'pool'
  type: string
  default: '$(BuildPoolName)'
- name: 'vmImage'
  type: string
  default: '$(BuildPoolWindowsVm)'

jobs:
- job: ${{ parameters.name }}
  displayName: Test Module on ${{ parameters.vmImage }} (${{ parameters.pool }})
  pool:
    name: ${{ parameters.pool }}
    vmImage: ${{ parameters.vmImage }}
  steps:
  - task: CopyFiles@2
    displayName: 'Copy Sources'
    inputs:
      SourceFolder: 'src/$(Build.DefinitionName)'
      Contents: |
        **
        !**\.gitignore
      TargetFolder: '$(BuildSourcesDirectory)'
      CleanTargetFolder: true
      OverWrite: true
  - powershell: |
      Write-Host "Installing dependencies..."
      (Import-PowerShellDataFile .\$(Build.DefinitionName).psd1).RequiredModules | Where-Object { $_ } | ForEach-Object {
          Write-Host " - Installing module '$($_.ModuleName)' with version '$($_.ModuleVersion)'."
          Find-Module -Name $_.ModuleName -RequiredVersion $_.ModuleVersion | Install-Module -Scope CurrentUser -Force
      }

      Write-Host "Creating test results directory..."
      New-Item -Path $(BuildTestDirectory) -ItemType Directory -Force
    workingDirectory: '$(BuildSourcesDirectory)'
    displayName: 'Initialize Tests'
  - task: PowerShell Script Analyzer@1
    displayName: 'Run PowerShell Script Analyzer'
    inputs:
      PsFolder: '$(BuildSourcesDirectory)\Public'
      ExcludeRules: 'PSAvoidGlobalVars'
      Severity: 'Error'
      FailOnError: true
  - task: Pester@10
    displayName: 'Run Pester Tests'
    inputs:
      scriptFolder: '$(BuildSourcesDirectory)\*'
      resultsFile: '$(BuildTestOutputFile)'
      usePSCore: False
  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: '**\*.Tests.xml'
      searchFolder: '$(BuildTestDirectory)'
      mergeTestResults: true
      failTaskOnFailedTests: true
      testRunTitle: 'Pester Tests'