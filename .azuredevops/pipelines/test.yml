parameters:
- name: testWindows
  type: boolean
  default: true
- name: testLinux
  type: boolean
  default: true
- name: testMacOs
  type: boolean
  default: true

trigger:
- none

variables:
- name: poolName
  value: 'Azure Pipelines'
- name: vmImageWindows
  value: 'windows-latest'
- name: vmImageLinux
  value: 'ubuntu-latest'
- name: vmImageMacOS
  value: 'macOS-latest'

jobs:
- job: Test
  displayName: Test on
  strategy:
    matrix:
      Windows:
        poolName: ${{ variables.poolName }}
        vmImage: ${{ variables.vmImageWindows }}
      Linux:
        poolName: ${{ variables.poolName }}
        vmImage: ${{ variables.vmImageLinux }}
      MacOS:
        poolName: ${{ variables.poolName }}
        vmImage: ${{ variables.vmImageMacOS }}
  pool:
    name: $(poolName)
    vmImage: $(vmImage)
  steps:
  - checkout: none
  - powershell: Write-Host "$(Agent.OS)"
    condition: |
      and(
        succeeded(),
        or(
          and(eq(variables['Agent.OS'], 'Windows_NT'), eq('${{ parameters.testWindows }}', true)),
          and(eq(variables['Agent.OS'], 'Linux'), eq('${{ parameters.testLinux }}', true)),
          and(eq(variables['Agent.OS'], 'Darwin'), eq('${{ parameters.testMacOS }}', true))
        )
      )
  #- ${{ if eq(variables['Agent.OS'], 'Windows_NT') }}:
  #  - powershell: Write-Host "$(Agent.OS)"